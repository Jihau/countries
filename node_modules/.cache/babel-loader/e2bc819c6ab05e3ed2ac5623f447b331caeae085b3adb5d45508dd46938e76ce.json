{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuola\\\\WebstormProjects\\\\Country-assignment\\\\src\\\\components\\\\CountryInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = _ref => {\n  _s();\n  let {\n    country\n  } = _ref;\n  const [weatherInfo, setWeatherInfo] = useState([]);\n  const ACCESS_KEY = '283ceebfe4e85c65eff91264b4e0411f';\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${country.capital}&units=metric&appid=${ACCESS_KEY}`).then(response => {\n      setWeatherInfo(response.data);\n      console.log('response data: ', setWeatherInfo);\n      const temperature = response.data.main.temp;\n      const wind = response.data.wind.speed;\n      const icon = response.data.weather[0].icon;\n      console.log(temperature);\n      const weatherObject = {\n        temperature: temperature,\n        wind: wind,\n        icon: icon\n      };\n      setWeatherInfo(weatherObject);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capital city: \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", country.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Languages: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(country.languages).map(lang => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: country.languages[lang]\n      }, lang, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Flag:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.flags.png,\n      width: \"200\",\n      alt: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Weather in \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature:\", weatherInfo.temperature, \" Celcius\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"weather-icon\",\n      src: `http://openweathermap.org/img/wn/${weatherInfo.icon}@2x.png`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Wind \", weatherInfo.wind, \" m/s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryInfo, \"3fGMjVt2qqxBpUopeKgRkwSYTkY=\");\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useState","useEffect","axios","CountryInfo","country","weatherInfo","setWeatherInfo","ACCESS_KEY","get","capital","then","response","data","console","log","temperature","main","temp","wind","speed","icon","weather","weatherObject","name","common","population","Object","keys","languages","map","lang","flags","png"],"sources":["C:/Users/kuola/WebstormProjects/Country-assignment/src/components/CountryInfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst CountryInfo = ({ country }) => {\n    const [weatherInfo, setWeatherInfo] = useState([])\n    const ACCESS_KEY = '283ceebfe4e85c65eff91264b4e0411f';\n\n\n    useEffect(() => {\n        axios\n            .get(`https://api.openweathermap.org/data/2.5/weather?q=${country.capital}&units=metric&appid=${ACCESS_KEY}`)\n            .then(response => {\n                setWeatherInfo(response.data)\n                console.log('response data: ', setWeatherInfo);\n                const temperature = response.data.main.temp;\n                const wind = response.data.wind.speed;\n                const icon = response.data.weather[0].icon;\n                console.log(temperature);\n                const weatherObject = {\n                    temperature: temperature,\n                    wind: wind,\n                    icon: icon\n                }\n                setWeatherInfo(weatherObject)\n            })\n    })\n    return (\n        <div>\n            <h2>{country.name.common}</h2>\n            <p>Capital city: {country.capital}</p>\n            <p>Population: {country.population}</p>\n            <h3>Languages: </h3>\n            <ul>\n                {Object.keys(country.languages).map(lang =>\n                    <li key={lang}>{country.languages[lang]}</li>\n                )}\n            </ul>\n            <h3>Flag:</h3>\n            <img src={country.flags.png} width={\"200\"} alt={country.name.common}/>\n            <h3>Weather in {country.capital}</h3>\n            <p>Temperature:{weatherInfo.temperature} Celcius</p>\n            <img alt=\"weather-icon\" src={`http://openweathermap.org/img/wn/${weatherInfo.icon}@2x.png`}/>\n            <div>\n                Wind {weatherInfo.wind} m/s\n            </div>\n        </div>\n    )\n}\nexport default CountryInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,WAAW,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMO,UAAU,GAAG,kCAAkC;EAGrDN,SAAS,CAAC,MAAM;IACZC,KAAK,CACAM,GAAG,CAAE,qDAAoDJ,OAAO,CAACK,OAAQ,uBAAsBF,UAAW,EAAC,CAAC,CAC5GG,IAAI,CAACC,QAAQ,IAAI;MACdL,cAAc,CAACK,QAAQ,CAACC,IAAI,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAER,cAAc,CAAC;MAC9C,MAAMS,WAAW,GAAGJ,QAAQ,CAACC,IAAI,CAACI,IAAI,CAACC,IAAI;MAC3C,MAAMC,IAAI,GAAGP,QAAQ,CAACC,IAAI,CAACM,IAAI,CAACC,KAAK;MACrC,MAAMC,IAAI,GAAGT,QAAQ,CAACC,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI;MAC1CP,OAAO,CAACC,GAAG,CAACC,WAAW,CAAC;MACxB,MAAMO,aAAa,GAAG;QAClBP,WAAW,EAAEA,WAAW;QACxBG,IAAI,EAAEA,IAAI;QACVE,IAAI,EAAEA;MACV,CAAC;MACDd,cAAc,CAACgB,aAAa,CAAC;IACjC,CAAC,CAAC;EACV,CAAC,CAAC;EACF,oBACI;IAAA,wBACI;MAAA,UAAKlB,OAAO,CAACmB,IAAI,CAACC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eAC9B;MAAA,6BAAkBpB,OAAO,CAACK,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACtC;MAAA,2BAAgBL,OAAO,CAACqB,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACvC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MAAA,UACKC,MAAM,CAACC,IAAI,CAACvB,OAAO,CAACwB,SAAS,CAAC,CAACC,GAAG,CAACC,IAAI,iBACpC;QAAA,UAAgB1B,OAAO,CAACwB,SAAS,CAACE,IAAI;MAAC,GAA9BA,IAAI;QAAA;QAAA;QAAA;MAAA,QAAgC;IAChD;MAAA;MAAA;MAAA;IAAA,QACA,eACL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd;MAAK,GAAG,EAAE1B,OAAO,CAAC2B,KAAK,CAACC,GAAI;MAAC,KAAK,EAAE,KAAM;MAAC,GAAG,EAAE5B,OAAO,CAACmB,IAAI,CAACC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACtE;MAAA,0BAAgBpB,OAAO,CAACK,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACrC;MAAA,2BAAgBJ,WAAW,CAACU,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACpD;MAAK,GAAG,EAAC,cAAc;MAAC,GAAG,EAAG,oCAAmCV,WAAW,CAACe,IAAK;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eAC7F;MAAA,oBACUf,WAAW,CAACa,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA5CKf,WAAW;AAAA,KAAXA,WAAW;AA6CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}